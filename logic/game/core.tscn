[gd_scene load_steps=17 format=3 uid="uid://cyqt8l38l2lks"]

[ext_resource type="Material" uid="uid://byy3chjt7uksd" path="res://art/shaders/enity_shader.tres" id="1_1kwoj"]
[ext_resource type="Texture2D" uid="uid://crxavcqfiprb6" path="res://art/game/core.png" id="1_ku4c5"]
[ext_resource type="Script" path="res://logic/game/core.gd" id="1_x414t"]
[ext_resource type="Material" uid="uid://qnuosh47sabh" path="res://art/shaders/shadow_shader.tres" id="2_6idsl"]
[ext_resource type="Texture2D" uid="uid://bftjt7wde2yg7" path="res://art/game/ombre.png" id="3_ww4qa"]
[ext_resource type="Texture2D" uid="uid://crc5plg6qn27t" path="res://art/game/empty_core.png" id="6_e2t73"]
[ext_resource type="Texture2D" uid="uid://b56yyys58ly06" path="res://art/game/core_light.png" id="7_vsimx"]

[sub_resource type="AtlasTexture" id="AtlasTexture_ylvuc"]
atlas = ExtResource("1_ku4c5")
region = Rect2(0, 0, 56, 60)

[sub_resource type="AtlasTexture" id="AtlasTexture_mgv55"]
atlas = ExtResource("1_ku4c5")
region = Rect2(56, 0, 56, 60)

[sub_resource type="AtlasTexture" id="AtlasTexture_0hv2b"]
atlas = ExtResource("1_ku4c5")
region = Rect2(0, 0, 56, 60)

[sub_resource type="AtlasTexture" id="AtlasTexture_e23py"]
atlas = ExtResource("1_ku4c5")
region = Rect2(56, 0, 56, 60)

[sub_resource type="SpriteFrames" id="SpriteFrames_5b4ge"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ylvuc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mgv55")
}],
"loop": true,
"name": &"blink",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_0hv2b")
}],
"loop": true,
"name": &"off",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_e23py")
}],
"loop": true,
"name": &"on",
"speed": 5.0
}]

[sub_resource type="Shader" id="Shader_jrnw4"]
code = "shader_type canvas_item;
//render_mode blend_mix;

varying vec2 world_position;

const int ELASTIC_MAX_POINTS = 30;
uniform vec2 elastic_points[ELASTIC_MAX_POINTS];
uniform int elastic_current_points_number;
uniform float current_elastic_tension = 1.0;
uniform float current_elastic_tension_boost = 0.0;

uniform float common_max_elastic_thickness = 12;
uniform float common_min_elastic_thickness = 1;
uniform float common_elastic_sdf_offset = 12.0;

uniform bool enable_chromatic_distortion = false;

uniform float pv = 1.0;

uniform float waistline = 0.5;

void vertex(){
    world_position = (MODEL_MATRIX * vec4(VERTEX,0.0,1.0)).xy;
}

//The following two functions are adapted from Inigo Quilez work that can be found here https://iquilezles.org/articles/distfunctions/
float sdPolygon( in vec2[ELASTIC_MAX_POINTS] v, in int current_max_points, in vec2 p )
{
	int array_size = min(current_max_points,ELASTIC_MAX_POINTS);
	
    float d = dot(p-v[0],p-v[0]);
    float s = 1.0;
    for( int i=0, j=array_size-1; i<array_size; j=i, i++ )
    {
        vec2 e = v[j] - v[i];
        vec2 w =    p - v[i];
        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );
        d = min( d, dot(b,b) );
        bvec3 c = bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);
        if( all(c) || all(not(c)) ) s*=-1.0;  
    }
    return s*sqrt(d);
}

float opRound(in float d, in float r)
{
  return d - r;
}

vec4 chromatic_distortion (sampler2D txture, vec2 uv)
{
	vec4 final_color;
	vec4 texture_color = texture(txture, uv);
	float distortion_power = 1.0-uv.y;
	
	float distortion_offset = 0.05 * distortion_power * sin(TIME*25.0) * cos(TIME*2.0)*2.0;
	
	vec4 right_texture = texture(txture, uv-vec2(distortion_offset,(sin(TIME*35.0)+1.0)*0.01));
	vec4 left_texture = texture(txture, uv+vec2(distortion_offset,(sin(TIME*35.0)+1.0)*0.01));
	final_color.r = right_texture.r;
	final_color.g = final_color.g;
	final_color.b = left_texture.b;
	
	final_color.a = max(texture_color.a, max(right_texture.a, left_texture.a));
	
	return final_color;
}

float get_current_elastic_thickness()
{
	float tension = clamp(current_elastic_tension, 0.0, 1.0);
	return mix(common_max_elastic_thickness, common_min_elastic_thickness, tension);
}

void fragment() {
	float elastic_distance = opRound(sdPolygon(elastic_points, elastic_current_points_number, world_position), common_elastic_sdf_offset);

	vec3 base_elastic_color = vec3(1.0);
	
	vec4 final_color = COLOR.rgba;
	
	if (elastic_distance > 0.0 && enable_chromatic_distortion)
	{
		final_color = chromatic_distortion(TEXTURE,UV);
	}
	
	if (UV.y > waistline)
	{
		if (elastic_distance > 0.0 && elastic_distance < get_current_elastic_thickness())
		{
			final_color.rgb = base_elastic_color;
		}
	}
	
	if (1.0 - UV.y > pv)
	{
		final_color = vec4(0.0);
	}
	
    COLOR = final_color;
}

   
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_771mu"]
shader = SubResource("Shader_jrnw4")
shader_parameter/elastic_points = []
shader_parameter/elastic_current_points_number = 9
shader_parameter/current_elastic_tension = 1.0
shader_parameter/current_elastic_tension_boost = 0.0
shader_parameter/common_max_elastic_thickness = 12.0
shader_parameter/common_min_elastic_thickness = 1.0
shader_parameter/common_elastic_sdf_offset = 12.0
shader_parameter/enable_chromatic_distortion = false
shader_parameter/pv = 0.5
shader_parameter/waistline = 0.5

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_4q2lb"]
radius = 12.0
height = 52.0

[sub_resource type="CircleShape2D" id="CircleShape2D_q31jk"]
radius = 33.0

[node name="core" type="StaticBody2D"]
collision_layer = 3
collision_mask = 3
script = ExtResource("1_x414t")

[node name="Sprite2D" type="Sprite2D" parent="."]
self_modulate = Color(1, 1, 1, 0.388235)
material = ExtResource("2_6idsl")
position = Vector2(0, 21)
scale = Vector2(1.8, 1.8)
texture = ExtResource("3_ww4qa")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
visible = false
material = ExtResource("1_1kwoj")
sprite_frames = SubResource("SpriteFrames_5b4ge")
animation = &"on"

[node name="EmptyCore" type="Sprite2D" parent="."]
material = ExtResource("1_1kwoj")
texture = ExtResource("6_e2t73")

[node name="LightCore" type="Sprite2D" parent="EmptyCore"]
light_mask = 524288
material = SubResource("ShaderMaterial_771mu")
position = Vector2(0, 7)
texture = ExtResource("7_vsimx")

[node name="LightEmitionPosition" type="Node2D" parent="."]
position = Vector2(0, 18)

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 14)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_4q2lb")

[node name="HitBox" type="Area2D" parent="."]
collision_layer = 512
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="HitBox"]
position = Vector2(0, 4)
shape = SubResource("CircleShape2D_q31jk")
